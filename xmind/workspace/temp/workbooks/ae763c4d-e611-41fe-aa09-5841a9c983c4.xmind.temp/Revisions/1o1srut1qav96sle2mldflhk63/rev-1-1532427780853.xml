<?xml version="1.0" encoding="UTF-8" standalone="no"?><xmap-revision-content xmlns="urn:xmind:xmap:xmlns:revision:1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink"><sheet id="1o1srut1qav96sle2mldflhk63" modified-by="jimmy" theme="39fc50hke3qh1nbjgaho24t21e" timestamp="1532427775854" xmlns="urn:xmind:xmap:xmlns:content:2.0"><topic id="55npliebv4r0e4b661mu54g1ie" modified-by="jimmy" structure-class="org.xmind.ui.logic.right" timestamp="1532426908848"><title>Java 基础</title><children><topics type="attached"><topic id="6llmcfb313f9oc805bgiumhpnl" modified-by="jimmy" timestamp="1532426272995"><title>数据类型</title><children><topics type="attached"><topic id="0k4hkgicqj2508k1v3g87t5mml" modified-by="jimmy" timestamp="1532426263304"><title>八种基本数据类型</title></topic><topic id="7mblh1459rtbulo140s5kmcv8p" modified-by="jimmy" timestamp="1532426382155"><title svg:width="500">缓存池, 自动装箱会调用valueOf(0), 判断缓存池中有就直接返回值</title></topic></topics></children></topic><topic id="7r696t6pha2kch01d4frsk6kka" modified-by="jimmy" timestamp="1532426494488"><title>String</title><children><topics type="attached"><topic id="3s6aho5806rk7qec1vcjjmh7dh" modified-by="jimmy" timestamp="1532426416591"><title>final修饰不可变</title></topic><topic id="0b9sspef4ov804u7m086d4iboj" modified-by="jimmy" timestamp="1532426471353"><title svg:width="500">String Pool创建过的String能再缓存池中找到返回引用</title></topic><topic id="5ntu1ks0p0c7b2vco0674k478b" modified-by="jimmy" timestamp="1532426530823"><title>String.intern()可以保证引用相同的内存对象</title></topic></topics></children></topic><topic id="38sh746bp18osj1qklvs08fd3m" modified-by="jimmy" timestamp="1532426600162"><title>参数传递</title><children><topics type="attached"><topic id="76efp0d4tt3gfm326m0jgg0f67" modified-by="jimmy" timestamp="1532426625338"><title>本质上时值传递, 对象传递的时对象的地址</title></topic></topics></children></topic><topic id="0kpn4d9rvb6bphcqod5oumuo8q" modified-by="jimmy" timestamp="1532426694655"><title>关键字</title><children><topics type="attached"><topic id="4k03i3rn05hts9mafjbesml7jk" modified-by="jimmy" timestamp="1532426699805"><title>static</title><children><topics type="attached"><topic id="6721l7jc64c274ukpuliabofsp" modified-by="jimmy" timestamp="1532426871104"><title>静态变量,静态语句块,静态方法,静态内部类,静态导包</title></topic></topics></children></topic><topic id="5us5vbkoc77dmuev0b5km2fcjb" modified-by="jimmy" timestamp="1532426795049"><title>final</title><children><topics type="attached"><topic id="0dnb9gqba6rnktbvqsf0n8vm0m" modified-by="jimmy" timestamp="1532426858068"><title>修饰变量,方法,类</title></topic></topics></children></topic></topics></children></topic><topic id="2mf0r7lugco74oshdqttbeq1vl" modified-by="jimmy" timestamp="1532426950994"><title>反射</title><children><topics type="attached"><topic id="4j11l5agoppe9t1e1ehtjbqthg" modified-by="jimmy" timestamp="1532426994567"><title svg:width="500">Class对象,获取运行时类的信息,变量,方法,构造函数</title></topic></topics></children></topic><topic id="1ol4ea12qpf96ajn0jjou4lsnc" modified-by="jimmy" timestamp="1532427040397"><title>异常</title><children><topics type="attached"><topic id="3orfejnvfflugquegc9kvk4gra" modified-by="jimmy" timestamp="1532427049347"><title>Error</title></topic><topic id="12kpghgf8q6djktr0feh131fhn" modified-by="jimmy" timestamp="1532427058960"><title>Exception</title></topic></topics></children></topic><topic id="5r4ed2aum7ts5b1gp0tbcev805" modified-by="jimmy" timestamp="1532427770155"><title>注解</title><children><topics type="attached"><topic id="4tld2b91tuenqj092sdeja4ikn" modified-by="jimmy" timestamp="1532427775854"><title svg:width="500">注解本质是一个继承了Annotation的特殊接口，&#13;
其具体实现类是Java运行时生成的动态代理类</title></topic></topics></children></topic><topic id="1s6lc7r5uivsi0toesvsdlo0l7" modified-by="jimmy" timestamp="1532427261251"><title>泛型</title><children><topics type="attached"><topic id="1g36c6d05sfb1rvstvh1afdc16" modified-by="jimmy" timestamp="1532427215679"><title>规定了类型,保证编译期的类型安全</title></topic><topic id="6c2kijv96rnlhknhmst4fqt356" modified-by="jimmy" timestamp="1532427260270"><title>限定通配符&lt;? extends T&gt;&lt;? super T&gt;</title></topic><topic id="0d0h3v8tftbe874vp5nqss1o2q" modified-by="jimmy" timestamp="1532427284526"><title>非限定通配符&lt;?&gt;</title></topic></topics></children></topic></topics></children></topic><title>画布 1</title></sheet></xmap-revision-content>